import { Router } from 'restify-router'
import { doorman } from '@/services/guard'
import { getAll, getOne, postOne, patchOne, deleteOne, deleteAll } from './controller'
// import model from './model'

const router = new Router()


/*
 * Serve resources with fine grained mapping control
 * */

/* GET */
/**
 * @api {get} /{{lowerCase endpointName}}s Retrieve {{lowerCase endpointName}}s
 * @apiName Retrieve{{pascalCase endpointName}}s
 * @apiGroup {{pascalCase endpointName}}
 * @apiUse listParams
 * @apiSuccess {Object[]} {{lowerCase endpointName}}s List of {{lowerCase endpointName}}s.
 * @apiError {Object} 400 Some parameters may contain invalid values.
 */
router.get('', getAll)

/**
 * @api {get} /{{lowerCase endpointName}}s/:id Retrieve {{lowerCase endpointName}}
 * @apiName Retrieve{{pascalCase endpointName}}
 * @apiGroup {{pascalCase endpointName}}
 * @apiSuccess {Object} {{lowerCase endpointName}} {{pascalCase endpointName}}'s data.
 * @apiError {Object} 400 Some parameters may contain invalid values.
 * @apiError 404 {{pascalCase endpointName}} not found.
 */
router.get('/:id', getOne)

/* POST */
/**
 * @api {post} /{{lowerCase endpointName}}s Create {{lowerCase endpointName}}
 * @apiName Create{{pascalCase endpointName}}
 * @apiGroup {{pascalCase endpointName}}
 * @apiPermission user
 * @apiParam content {{pascalCase endpointName}}'s content.
 * @apiSuccess {Object} {{lowerCase endpointName}} {{pascalCase endpointName}}'s data.
 * @apiError {Object} 400 Some parameters may contain invalid values.
 * @apiError 404 {{pascalCase endpointName}} not found.
 */
router.post('', postOne)

/* PATCH */
/**
 * @api {put} /{{lowerCase endpointName}}s/:id Update {{lowerCase endpointName}}
 * @apiName Update{{pascalCase endpointName}}
 * @apiGroup {{pascalCase endpointName}}
 * @apiParam content {{pascalCase endpointName}}'s content.
 * @apiSuccess {Object} {{lowerCase endpointName}} {{pascalCase endpointName}}'s data.
 * @apiError {Object} 400 Some parameters may contain invalid values.
 * @apiError 404 {{pascalCase endpointName}} not found.
 */  
router.patch('/:id', patchOne)

/* DELETE */
/**
 * @api {delete} /{{lowerCase endpointName}}s/:id Delete {{lowerCase endpointName}}
 * @apiName {{pascalCase endpointName}}
 * @apiGroup {{pascalCase endpointName}}
 * @apiSuccess (Success 204) 204 No Content.
 * @apiError 404 {{pascalCase endpointName}} not found.
 */
router.del('/:id', deleteOne)

/**
 * @api {delete} /{{lowerCase endpointName}}s/all Delete all {{lowerCase endpointName}}s
 * @apiName DeleteAll{{pascalCase endpointName}}s
 * @apiGroup {{pascalCase endpointName}}
 * @apiPermission admin
 * @apiParam {String} admintoken admin access token.
 * @apiSuccess (Success 204) 204 No Content.
 * @apiError 401 admin access only.
 */
router.del('/all', doorman(['admin']), deleteAll)

/**
 * Export this function
 * @returns {Function} the Router of {{lowerCase endpointName}}
 */
export default router